{
    "Program": [
      [
        "Declaration_list"
      ]
    ],
    "Declaration_list": [
      [
        "Declaration",
        "Declaration_list"
      ],
      [
        "EPSILON"
      ]
    ],
    "Declaration": [
      [
        "Declaration_initial",
        "Declaration_prime"
      ]
    ],
    "Declaration_initial": [
      [
        "Type_specifier",
        "ID"
      ]
    ],
    "Declaration_prime": [
      [
        "Fun_declaration_prime"
      ],
      [
        "Var_declaration_prime"
      ]
    ],
    "Var_declaration_prime": [
      [
        "#DEC_VAR",
        ";"
      ],
      [
        "[",
        "#DEC_ARR",
        "NUM",
        "]",
        ";"
      ]
    ],
    "Fun_declaration_prime": [
      [
        "(",
        "#GET_PARAMS",
        "Params",
        ")",
        "#CREATE_FUNCTION_FRAME",
        "#CREATE_NEW_RETURN_SCOPE",
        "Compound_stmt",
        "#FILL_RETURNS"
      ]
    ],
    "Type_specifier": [
      [
        "#PUSH_TYPE",
        "int",
        "#PIDN"
      ],
      [
        "void"
      ]
    ],
    "Params": [
      [
        "#PUSH_TYPE",
        "int",
        "#PID",
        "ID",
        "Param_prime",
        "Param_list"
      ],
      [
        "void"
      ]
    ],
    "Param_list": [
      [
        ",",
        "Param",
        "Param_list"
      ],
      [
        "EPSILON"
      ]
    ],
    "Param": [
      [
        "Declaration_initial",
        "Param_prime"
      ]
    ],
    "Param_prime": [
      [
        "[",
        "#ADD_PARAM_ARRAY",
        "]"
      ],
      [
        "#ADD_PARAM",
        "EPSILON"
      ]
    ],
    "Compound_stmt": [
      [
        "#DEFINE_NEW_SCOPE",
        "{",
        "Declaration_list",
        "Statement_list",
        "}",
        "#END_SCOPE"
      ]
    ],
    "Statement_list": [
      [
        "Statement",
        "Statement_list"
      ],
      [
        "EPSILON"
      ]
    ],
    "Statement": [
      [
         "Out_stmt"
      ],
      [
        "Expression_stmt"
      ],
      [
        "Compound_stmt"
      ],
      [
        "Selection_stmt"
      ],
      [
        "Iteration_stmt"
      ],
      [
        "Return_stmt"
      ]
    ],
    "Expression_stmt": [
      [
        "Expression",
        ";",
        "#POP_EXTRA"
      ],
      [
        "break",
        ";",
        "#SAVE_BREAK_ADDR"
      ],
      [
        ";"
      ]
    ],
    "Selection_stmt": [
      [
        "if",
        "(",
        "Expression",
        ")",
        "#SAVE_INDEX",
        "Statement",
        "#JPF",
        "else",
        "Statement",
        "#JUMP"
      ]
    ],
    "Iteration_stmt": [
      [
        "repeat",
        "#ADD_TO_BREAKS_SAVE",
        "Statement",
        "until",
        "(",
        "Expression",
        ")",
        "#UNTIL_JUMP"
      ]
    ],
    "Return_stmt": [
      [
        "return",
        "Return_stmt_prime",
        "#SAVE_RETURN"
      ]
    ],
    "Return_stmt_prime": [
      [
        ";"
      ],
      [
        "Expression",
        ";"
      ]
    ],
    "Expression": [
      [
        "Simple_expression_zegond"
      ],
      [
        "#PID",
        "ID",
        "B"
      ]
    ],
    "B": [
      [
        "=",
        "Expression",
        "#ASSIGN"
      ],
      [
        "[",
        "Expression",
        "]",
        "#ARR_ACC",
        "H"
      ],
      [
        "Simple_expression_prime"
      ]
    ],
    "H": [
      [
        "=",
        "Expression",
        "#ASSIGN"
      ],
      [
        "G",
        "D",
        "C"
      ]
    ],
    "Simple_expression_zegond": [
      [
        "Additive_expression_zegond",
        "C"
      ]
    ],
    "Simple_expression_prime": [
      [
        "Additive_expression_prime",
        "C"
      ]
    ],
    "C": [
      [
        "#PUSHOP",
        "Relop",
        "Additive_expression",
        "#CMP"
      ],
      [
        "EPSILON"
      ]
    ],
    "Relop": [
      [
        "<"
      ],
      [
        "=="
      ]
    ],
    "Additive_expression": [
      [
        "Term",
        "D"
      ]
    ],
    "Additive_expression_prime": [
      [
        "Term_prime",
        "D"
      ]
    ],
    "Additive_expression_zegond": [
      [
        "Term_zegond",
        "D"
      ]
    ],
    "D": [
      [
        "Addop",
        "Term",
        "#ADD_SUB",
        "D"
      ],
      [
        "EPSILON"
      ]
    ],
    "Addop": [
      [
        "#PUSHOP",
        "+"
      ],
      [
        "#PUSHOP",
        "-"
      ]
    ],
    "Term": [
      [
        "Factor",
        "G"
      ]
    ],
    "Term_prime": [
      [
        "Factor_prime",
        "G"
      ]
    ],
    "Term_zegond": [
      [
        "Factor_zegond",
        "G"
      ]
    ],
    "G": [
      [
        "*",
        "Factor",
        "#MUL",
        "G"
      ],
      [
        "EPSILON"
      ]
    ],
    "Factor": [
      [
        "(",
        "Expression",
        ")"
      ],
      [
        "#PID",
        "ID",
        "Var_call_prime"
      ],
      [
        "#PNUM",
        "NUM"
      ]
    ],
    "Var_call_prime": [
      [
        "(",
        "Args",
        ")"
      ],
      [
        "Var_prime"
      ]
    ],
    "Var_prime": [
      [
        "[",
        "Expression",
        "]",
        "#ARR_ACC"
      ],
      [
        "EPSILON"
      ]
    ],
    "Factor_prime": [
      [
        "(",
        "Args",
        ")"
      ],
      [
        "EPSILON"
      ]
    ],
    "Factor_zegond": [
      [
        "(",
        "Expression",
        ")"
      ],
      [
        "#PNUM",
        "NUM"
      ]
    ],
    "Args": [
      [
        "Arg_list"
      ],
      [
        "EPSILON"
      ]
    ],
    "Arg_list": [
      [
        "Expression",
        "Arg_list_prime"
      ]
    ],
    "Arg_list_prime": [
      [
        ",",
        "Expression",
        "Arg_list_prime"
      ],
      [
        "EPSILON"
      ]
    ],
    "Out_stmt": [
        [
            "ID",
            "(",
            "Expression",
            ")",
            "#OUTPUT",
            ";"
        ]
    ]
  }
